@model AngularMVC.DAL.Product_Item

@{
    ViewBag.Title = "Add New Item";
    Layout = "~/Areas/SuperAdmin/Views/Shared/_Layout.cshtml";
}

@section HeadContent{
    <script src="~/Areas/SuperAdmin/Themes/ckeditor_full/ckeditor.js"></script>
}

<h2>Add New Item</h2>

<div class="row">
    @using (Html.BeginForm("Create", "Manage_Product_Item", FormMethod.Post, new { enctype = "multipart/form-data", area = "Admin" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-6 col-lg-6 col-sm-12 col-xs-12">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name of Product", maxlength = 100 } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control", placeholder = "Product Code Eg. PS-201", maxlength = 100 } })
                        @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
                    </div>
                </div>


                                <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, "Category Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @Html.DropDownListFor(modal => modal.CategoryName, new List<SelectListItem>{
                new SelectListItem() {Text = "Food", Value="Food"},
                new SelectListItem() {Text = "Clothing", Value="Clothing"},
                new SelectListItem() {Text = "Home Appliances", Value="Home Appliances"},
                new SelectListItem() {Text = "Accessories", Value="Accessories"},
                 new SelectListItem() {Text = "Handicraft", Value="Handicraft"}
                }, new { @class = "form-control" })
                @*@Html.DropDownList("CategoryName", (SelectList)ViewBag.CategoryName, new { @id = "CategoryName", @class = "form-control" })*@
                @*@Html.DropDownList("CategoryName", (SelectList)ViewBag.CategoryName, new { @id = "CategoryName", @class = "form-control" })*@
            </div>
        </div>

                <div class="form-group">
                    <h4><b>Short Description </b></h4>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control", placeholder = "Short description about page in about 500 characters", maxlength = 500 } })
                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <h4><b>Full Description </b></h4>
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.Description, new { @id = "FullDescription", @class = "form-control", @rows = "200" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        <script>CKEDITOR.replace("FullDescription");</script>
                    </div>
                </div>

                <div class="form-group">
                    <h4><b>Highlights </b></h4>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Highlight, new { htmlAttributes = new { @class = "form-control", placeholder = "Highlights in about page in about 500 characters", maxlength = 500 } })
                        @Html.ValidationMessageFor(model => model.Highlight, "", new { @class = "text-danger" })

                    </div>
                </div>

                <!-- DIRECT CHAT -->
                <div class="box box-warning direct-chat direct-chat-warning">
                    <div class="box-header with-border">
                        <h3 class="box-title">Item Setting</h3>
                        <div class="box-tools pull-right">
                            <span data-toggle="tooltip" title="Important" class="badge bg-red"><i class="fa fa-exclamation">&nbsp;</i>Important</span>
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-toggle="tooltip" title="Help" data-widget="chat-pane-toggle">
                                <i class="fa fa-gears"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove">
                                <i class="fa fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ListPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ListPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ListPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Visibility, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(modal => modal.Visibility, new List<SelectListItem>{
                        new SelectListItem() {Text = "Visible", Value="1"},
                        new SelectListItem() {Text = "Not Visible", Value="0" } },
                        new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Visibility, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HasCostVariants, "Has Cost Variant", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(modal => modal.HidePrice, new List<SelectListItem>{
                        new SelectListItem() {Text = "Yes", Value="True"},
                        new SelectListItem() {Text = "No", Value="False" }
           })
                                @Html.ValidationMessageFor(model => model.HidePrice, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <!-- Help Section -->
                        <div class="direct-chat-contacts" style="height: inherit;">
                            <ul class="contacts-list">
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Parent Page
                                                <small class="contacts-list-date pull-right"><i class="fa fa-bell"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">Select parent page to which you want to make this page child page.</span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Publish page
                                                <small class="contacts-list-date pull-right"><i class="fa fa-globe"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">
                                                <ol>
                                                    <li><b>Publish Page</b> : if you wan to make the page visible to Public</li>
                                                    <li><b>Don't Publish Page</b> : if you wan to make the page visible to Public</li>
                                                </ol>
                                            </span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Comments
                                                <small class="contacts-list-date pull-right"><i class="fa fa-comments-o"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">
                                                <ol>
                                                    <li><b>Allow Comments</b> : if you want people to comment on this page to make the page.</li>
                                                    <li><b>Don't Allow Comments </b> : if you want people not to comment on this page.</li>
                                                </ol>
                                            </span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Social Sharing
                                                <small class="contacts-list-date pull-right"><i class="fa fa-sharing"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">
                                                <ol>
                                                    <li><b>Allow Social Sharing</b> : if you want people to share the content of the is page.</li>
                                                    <li><b>Don't Allow Social Sharing </b> : if you don't people to share the content of the is page.</li>
                                                </ol>
                                            </span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                            </ul>
                            <!-- /.Help Section -->
                        </div>
                        <!-- /.direct-chat-pane -->
                    </div>
                    <!-- /.box-body -->

                </div>
                <!--/.Item setting -->



            </div> <!--End of Col-8-->


            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <!-- DIRECT CHAT -->
                <div class="box box-warning direct-chat direct-chat-warning">
                    <div class="box-header with-border">
                        <h3 class="box-title">Item Active</h3>
                        <div class="box-tools pull-right">
                            <span data-toggle="tooltip" title="Important" class="badge bg-red"><i class="fa fa-exclamation">&nbsp;</i>Important</span>
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-toggle="tooltip" title="Help" data-widget="chat-pane-toggle">
                                <i class="fa fa-gears"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove">
                                <i class="fa fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.HidePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(modal => modal.HidePrice, new List<SelectListItem>{
                        new SelectListItem() {Text = "Hide", Value="1"},
                        new SelectListItem() {Text = "Don't Hide", Value="0" }
           })
                                @Html.ValidationMessageFor(model => model.HidePrice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HideToAnonymous, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(modal => modal.HideToAnonymous, new List<SelectListItem>{
                        new SelectListItem() {Text = "Hide", Value="1"},
                        new SelectListItem() {Text = "Don't Hide", Value="0" }
           })
                                @Html.ValidationMessageFor(model => model.HideToAnonymous, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ActiveFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ActiveFrom, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                @Html.ValidationMessageFor(model => model.ActiveFrom, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ActiveTo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ActiveTo, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                @Html.ValidationMessageFor(model => model.ActiveTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                                                <!-- Help Section -->
                        <div class="direct-chat-contacts" style="height: inherit;">
                            <ul class="contacts-list">
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Parent Page
                                                <small class="contacts-list-date pull-right"><i class="fa fa-bell"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">Select parent page to which you want to make this page child page.</span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Publish page
                                                <small class="contacts-list-date pull-right"><i class="fa fa-globe"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">
                                                <ol>
                                                    <li><b>Publish Page</b> : if you wan to make the page visible to Public</li>
                                                    <li><b>Don't Publish Page</b> : if you wan to make the page visible to Public</li>
                                                </ol>
                                            </span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Comments
                                                <small class="contacts-list-date pull-right"><i class="fa fa-comments-o"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">
                                                <ol>
                                                    <li><b>Allow Comments</b> : if you want people to comment on this page to make the page.</li>
                                                    <li><b>Don't Allow Comments </b> : if you want people not to comment on this page.</li>
                                                </ol>
                                            </span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                                <li>
                                    <a href="#">
                                        <div class="contacts-list-info">
                                            <span class="contacts-list-name">
                                                Social Sharing
                                                <small class="contacts-list-date pull-right"><i class="fa fa-sharing"></i></small>
                                            </span>
                                            <span class="contacts-list-msg">
                                                <ol>
                                                    <li><b>Allow Social Sharing</b> : if you want people to share the content of the is page.</li>
                                                    <li><b>Don't Allow Social Sharing </b> : if you don't people to share the content of the is page.</li>
                                                </ol>
                                            </span>
                                        </div>
                                        <!-- /.contacts-list-info -->
                                    </a>
                                </li>
                                <!-- End Contact Item -->
                            </ul>
                            <!-- /.Help Section -->
                        </div>
                        <!-- /.direct-chat-pane -->
                    </div>
                    <!-- /.box-body -->

                </div>
                <!--/.direct-chat -->

                <!--Featured Section-->
                <div class="box box-default">
                    <div class="box-header with-border">
                        <h3 class="box-title">Featured Setting</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div class="">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(modal => modal.IsFeatured, new List<SelectListItem>{
                        new SelectListItem() {Text = "Featured", Value="1"},
                        new SelectListItem() {Text = "Don't Feature", Value="0" }
           })
                                    @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FeaturedFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FeaturedFromDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.FeaturedFromDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FeaturedToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FeaturedToDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.FeaturedToDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
                <!--End of Featured Section-->



                <!--Special Section-->
                <div class="box box-default">
                    <div class="box-header with-border">
                        <h3 class="box-title">Special</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div class="">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsSpecial, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(modal => modal.IsSpecial, new List<SelectListItem>{
                        new SelectListItem() {Text = "Is Special", Value="Is Special"},
                        new SelectListItem() {Text = "Not Special", Value="0" }
           })
                                    @Html.ValidationMessageFor(model => model.IsSpecial, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpecialFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SpecialFromDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.SpecialFromDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpecialToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SpecialToDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.SpecialToDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
                <!--End of Special Section-->

                <!--Special Section-->
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">Other Settings</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div class="">

                            <div class="form-group">
                                @Html.LabelFor(model => model.NewFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NewFromDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.NewFromDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NewToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NewToDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.NewToDate, "", new { @class = "text-danger" })
                                </div>
                            </div>





                            <div class="form-group">
                                @Html.LabelFor(model => model.ViewCount, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ViewCount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, "Is Active", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(modal => modal.IsActive, new List<SelectListItem>{
                        new SelectListItem() {Text = "Active", Value="1"},
                        new SelectListItem() {Text = "Not Active", Value="0" }
           })
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.RatedValue, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(modal => modal.RatedValue, new List<SelectListItem>{
                        new SelectListItem() {Text = "1", Value="1"},
                        new SelectListItem() {Text = "2", Value="2"},
                        new SelectListItem() {Text = "3", Value="3"},
                        new SelectListItem() {Text = "4", Value="4"},
                         new SelectListItem() {Text = "5", Value="5"}
                        }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RatedValue, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LowStockQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LowStockQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LowStockQuantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OutOfStockQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OutOfStockQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OutOfStockQuantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MinCartQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MinCartQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MinCartQuantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MaxCartQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MaxCartQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MaxCartQuantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CostPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpecialPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SpecialPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SpecialPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpecialPriceFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SpecialPriceFromDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.SpecialPriceFromDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpecialPriceToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SpecialPriceToDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.ValidationMessageFor(model => model.SpecialPriceToDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ManufacturerPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ManufacturerPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ManufacturerPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.TotalDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TotalDiscount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TotalDiscount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
                <!--End of Special Section-->



                <div class="form-group">
                    @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-lg-12 col-md-12 col-xs-12">
                        <img id="previewimage" src="~/Themes/site/images/home/product1.jpg" width="100%" class="img img-thumbnail" /><br />
                        <br />
                        <input type="file" class="jfilestyle" data-input="false" name="Thumbnail" id="Thumbnail" onchange="$('#previewimage')[0].src = window.URL.createObjectURL(this.files[0])" accept=".jpg, .png" />
                    </div>
                </div>
            </div>

            <center>
                <div class="form-group">
                    <input type="submit" value="Save Changes" class="btn btn-success btn-lg" />
                </div>
            </center>

        </div>
    }
</div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
